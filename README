Oracle Cloud "Hello World Kit"

There is some idea and solution for Oracle Cloud Service API and network.
Just being ad-hook hack, it is not for sale and no warranty.
But It is useful for POC or understanding how to use Oracle Cloud Service.

0. Supported Environment

  bash,python,curl are needed for this scripts.

  It works on Windows 10 Techpreview Linux (Ubuntu) environment.
  It may useful using cygwin tools on Windows 7, 8.1

    cygwin https://www.cygwin.com/
    installer https://www.cygwin.com/setup-x86_64.exe

    You must choice 3 items on the category (Bin column) at "Select Package"
    view on the installer.

     Select Package 
     ---------------
     Net    curl
     Python python
     Devel  git

     It will start with double click "Cygwin64 Terminal" icon on the Desktop.

  Environment Settings

  Input next lines,

  $ git clone https://github.com/kkoj/oracle_cloud.git
  $ mkdir bin
  $ echo 'export PATH=$PATH:$HOME/oracle_cloud' >> .bash_profile
ã€€$ . .bash_profile
  $ vi bin/CONFIG_FILE

  It means,

  - get git repository
    Sometime you may need proxy settings.
  - make "bin" directory to deploy config files.
  - add oracle_cloud directory to PATH environment parameter.
  - make CONFIG_FILE. Any file name is OK.

1. make configuration file like this.

CONFIG_FILE
-------------------------------
IAAS_URL="https://api.compute.us0.oraclecloud.com"
OPC_DOMAIN="your_domain"
OPC_ACCOUNT="your_account"
OPC_PASS="password"
-------------------------------

2. set parameter in the scripts

  #
  # opc_compute.sh
  #

   CONF_FILE_DIR="$HOME/bin"
   ADJ_TIME=9000

  CONF_FILE_DIR is where opc_compute.sh deployed.

  ADJ_TIME

  The script has cache mechanism.
  If your access to Oracle Cloud is first time,
  the output may be like this;
  
   $ opc_compute.sh -l SITE1 auth
   Authenticated

  But if it is second time;

   $ opc_compute.sh -l SITE1 auth
   Authenticated with cache file compute_cookie-SITE1

  It is using cache file.
  So authentication is too much over head time for many request,
  cache file may reduce waiting time.
  
  There is difference between Oracle Cloud server's unix time and
  your terminal's unix time.
  The cookie's life time is 30 minutes(1800 seconds)

  $EPOCH is Oracle Cloud server's unix time.
  $EPOCH is your terminal's unix time.

  There is echo and date options in get_cookie().

  #
  # opc_storage.sh
  #

  CONF_FILE_DIR is where opc_storage.sh deployed.

3. command line

   $ opc_compute.sh -l CONFIG_FILE show

   $ opc_storage.sh -l CONFIG_FILE list

--
https://github.com/kkoj/oracle_cloud
