Oracle Cloud "Hello World Kit"

There is some idea and solution for Oracle Cloud Service API and network.
It is not for sale and no warranty.
But It is useful for POC or understanding how to use Oracle Cloud Service.
These scripts cover "Compute","Storage" cloud service.

 It contains,

 opc_compute.sh    Compute Service script
 opc_storage.sh    Storage Service Script
 opc_init.sh       common script

 If you could not get these file with git, get only this 3 files with web
 browser.

0. Supported Environment

  bash,python,curl are needed for this scripts.

  It works on Windows 10 Techpreview Linux (Ubuntu) environment.
  It may run using the cygwin tools on Windows 7, 8.1

    Setting the Cygwin

    cygwin https://www.cygwin.com/
    installer https://www.cygwin.com/setup-x86_64.exe

    You must choice 3 items on the category (Bin column) at "Select Package"
    view on the installer.

     Select Package 
     ---------------
     Net    curl
     Python python
     Devel  git

     It will start with double click "Cygwin64 Terminal" icon on the Desktop.

  Environment Settings (Cygwin,Linux,Mac)

  Input the next lines,

  (only when you are using proxy)
  --
  $ git config --global http.proxy http://<your.proxy.hostname>:8080
  $ git config --global https.proxy http://<your.proxy.hostname>:8080
  --

  $ git clone https://github.com/kkoj/oracle_cloud.git
  $ echo 'export PATH=$PATH:$HOME/oracle_cloud' >> .bash_profile
  $ . .bash_profile

  It means,

  - get git repository
    Sometime you may need proxy settings.
  - add oracle_cloud directory to PATH environment parameter.
  - source new .bash_profile

1. make configuration file like this.

Login to Oracle Cloud with Web browser, and get REST Endpoint on
Compute Cloud Service Detail.

Run opc_compute.sh or opc_storage.sh.

  $ opc_compute.sh

Please answer the questions by the script.
Then the configuration file will be in $HOME/.oracle_cloud-1.0/ .

config-"your_domain"
-------------------------------
IAAS_URL="https://your.endpoint.oraclecloud.com"
OPC_DOMAIN="your_domain"
OPC_ACCOUNT="your_account"
OPC_PASS="password"
-------------------------------

2. set parameter in the opc_compute.sh script

  #
  # opc_compute.sh
  #

   ADJ_TIME=9000

  ADJ_TIME

  The opc_compute.sh script has cache mechanism.
  If your access to Oracle Cloud is first time,
  the output may be like this;
  
   $ opc_compute.sh auth
   Authenticated

  But if it is second time;

   $ opc_compute.sh auth
   Authenticated with cache file compute_cookie-"your domain"

  It is using cache file.
  So authentication is too much over head time for many request,
  cache file may reduce waiting time.
  
  There is difference between Oracle Cloud server's unix time and
  your terminal's unix time.
  The cookie's life time is 30 minutes(1800 seconds)

  $EPOCH is Oracle Cloud server's unix time.
  $EPOCH is your terminal's unix time.

  There is echo and date options in get_cookie().

3. command line example

   $ opc_compute.sh list
   $ opc_storage.sh list

Usage: opc_compute.sh [-l "your domain" ] [ options ]

  options:
  auth           -- authentication with Oracle Cloud
  show           -- show compute instance
  sshkey         -- upload ssh-key
  shape          -- show oCPU + Memory size template
  imagelist      -- show OS and disk size template
  launchplan     -- make an instance for temporary
  list           -- list all instance,ipreservation,storage volume
  delete         -- delete objects except JCS,DBCS auto making objects
  config         -- make new configuration or change default setting

Usage: opc_storage.sh [-l "your domain" ] [ options ]

  options:
  list           -- list container/object
  create         -- make new container for standard storage
  create-archive -- make new container for archive storage
  restore        -- restore archived file
  upload         -- upload local file
  delete         -- delete container or container/object
  config         -- make new configuration or change default setting

When you want to down load archived files, restore it first.

--
https://github.com/kkoj/oracle_cloud
